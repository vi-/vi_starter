const fs = require( 'fs' );

function processConfigFile() {
  const rawData = fs.readFileSync( './src/config/colours.config.json' );
  return rawData;
}

const topComment = `
// ——————————————————————————————
// DO NOT EDIT THIS FILE, IT IS GENERATED BY A NODE SCRIPT
// To adjust theme colours, modify src/config/colours.config.json
// ——————————————————————————————\n
`;

function generateSass( obj ) {
  let result = '';
  result += topComment;
  Object.keys( obj ).forEach( ( key ) => {
    result += `$${key}: ${obj[key].hex};\n`;
  } );
  return result;
}

function generatePhp( obj ) {
  let result = '<?php \n';
  result += topComment;
  result += '$globalColours = [';
  Object.keys( obj ).forEach( ( key ) => {
    const nice = key.charAt( 0 ).toUpperCase() + key.slice( 1 );
    if ( !obj[key].sassOnly ) {
      result += `
      [
        'name'  => '${nice}',
        'slug'  => '${key}',
        'color' => '${obj[key].hex}'
      ],`;
    }
  } );
  result += '\n];';
  return result;
}

function writeFiles() {
  const dataObj = JSON.parse( processConfigFile() );
  const sassPath = './src/styles/partials/_colours.scss';
  const phpPath = './includes/global-colours.php';
  // Create a SCSS file
  fs.writeFile( sassPath, generateSass( dataObj ), ( err ) => {
    if ( err ) throw err;
    // eslint-disable-next-line no-console
    console.log( `   Colours SASS file generated ${sassPath} 🎨` );
  } );
  // Create a PHP file
  fs.writeFile( phpPath, generatePhp( dataObj ), ( err ) => {
    if ( err ) throw err;
    // eslint-disable-next-line no-console
    console.log( `   Colours PHP file generated ${phpPath} 🖍` );
  } );
}

writeFiles();