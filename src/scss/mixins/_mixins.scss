/* --------------------------------------------------
BETTER BOX MODEL
-------------------------------------------------- */

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
     -moz-box-sizing: $box-model;
          box-sizing: $box-model;
}

/* --------------------------------------------------
RESPONSIVE DESIGN MIXIN
-------------------------------------------------- */

$breakpoints: (
  'tiny'   : 420px,
  'small'  : 767px,
  'medium' : 992px,
  'large'  : 1200px,
  'xlarge' : 1500px,
  'huge'   : 1800px
);

$breakpoints-h: (
  'narrow' : 700px,
  'tall'   : 901px
);

/* WIDTH MEDIA QUERIES */

@mixin respond-to($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);
  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media (min-width: $value) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

/* HEIGHT MEDIA QUERIES */

@mixin respond-to-h($breakpoint) {
  $value: map-get($breakpoints-h, $breakpoint);

  @if $value != null {
    @media (min-height: $value) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}